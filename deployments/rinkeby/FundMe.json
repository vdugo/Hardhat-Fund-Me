{
  "address": "0x4987B0529a3269DA5eB7fB4CA8986E91c5cc0CD3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd0388bf3682019f8ce755e2edc6388c6772fece0e2d36095382da42961258cb8",
  "receipt": {
    "to": null,
    "from": "0xF45afaB6a593A6d1E2B67A8Ca59AD95aA0412ffE",
    "contractAddress": "0x4987B0529a3269DA5eB7fB4CA8986E91c5cc0CD3",
    "transactionIndex": 6,
    "gasUsed": "876763",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x0ee764f5f74486e9f0e3b841ebd623bd99a05534e8d8f5fc2ac142fb3d4d7767",
    "transactionHash": "0xd0388bf3682019f8ce755e2edc6388c6772fece0e2d36095382da42961258cb8",
    "logs": [],
    "blockNumber": 11145835,
    "cumulativeGasUsed": "1615304",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "feb09f5800e657e940fa18a6542ac188",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// Withdraw funds\\n// Set a minimum funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe\\n{\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable owner;\\n\\n    constructor(address priceFeedAddress)\\n    {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable\\n    {\\n        // We want to be able to set a minimum fund amount in USD\\n        // how do we send ETH to this contract?\\n        // 1e18 is 1 * 10^18 wei\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"Didn't send enough\\\");\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner\\n    {\\n\\n        for (uint funderIndex = 0; funderIndex < funders.length; ++funderIndex)\\n        {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // reset the array\\n        funders = new address[](0);\\n\\n        // withdraw the funds\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner\\n    {\\n        // require(msg.sender == owner, \\\"Sender is not owner!\\\");\\n        // more gas efficient\\n        if (msg.sender != owner)\\n        {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable\\n    {\\n        fund();\\n    }\\n    fallback() external payable\\n    {\\n        fund();\\n    }\\n}\",\"keccak256\":\"0x0c955687dd179df7875d5c7dbe021bc751fa710626f119d34ad844fa9773c7b2\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter\\n{\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256)\\n    {\\n        (, int price, , , ) = priceFeed.latestRoundData();\\n        // 1700.00000000 (8 decimal places)\\n        // convert to 18 decimal places and to a uint256\\n        return uint256(price * 1e10); // 1 * 10^10\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        // Always multiply before you divide\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x430c109ffb887022d8ab7e8dfebfc1471d3d97984ff9d52a031550489e0a1cc0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405162000fe238038062000fe283398181016040528101906100349190610114565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610141565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e1826100b6565b9050919050565b6100f1816100d6565b81146100fc57600080fd5b50565b60008151905061010e816100e8565b92915050565b60006020828403121561012a576101296100b1565b5b6000610138848285016100ff565b91505092915050565b60805160601c610e7b62000167600039600081816102e4015261056c0152610e7b6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107b3565b610521565b6040516100d891906107f9565b60405180910390f35b3480156100ed57600080fd5b506100f6610539565b60405161010391906107f9565b60405180910390f35b34801561011857600080fd5b50610121610546565b60405161012e9190610873565b60405180910390f35b34801561014357600080fd5b5061014c61056a565b604051610159919061089d565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108e4565b61058e565b6040516101a0919061089d565b60405180910390f35b6802b5e3af16b18800006101e660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cd90919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e9061096e565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d991906109bd565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610367576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104115760006001828154811061038d5761038c610a13565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508061040a90610a42565b905061036a565b50600067ffffffffffffffff81111561042d5761042c610a8b565b5b60405190808252806020026020018201604052801561045b5781602001602082028036833780820191505090505b50600190805190602001906104719291906106a9565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049890610aeb565b60006040518083038185875af1925050503d80600081146104d5576040519150601f19603f3d011682016040523d82523d6000602084013e6104da565b606091505b505090508061051e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051590610b4c565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d983610609565b90506000670de0b6b3a764000085836105f29190610b6c565b6105fc9190610bf5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065257600080fd5b505afa158015610666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068a9190610cb3565b5050509150506402540be400816106a19190610d2e565b915050919050565b828054828255906000526020600020908101928215610722579160200282015b828111156107215782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c9565b5b50905061072f9190610733565b5090565b5b8082111561074c576000816000905550600101610734565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078082610755565b9050919050565b61079081610775565b811461079b57600080fd5b50565b6000813590506107ad81610787565b92915050565b6000602082840312156107c9576107c8610750565b5b60006107d78482850161079e565b91505092915050565b6000819050919050565b6107f3816107e0565b82525050565b600060208201905061080e60008301846107ea565b92915050565b6000819050919050565b600061083961083461082f84610755565b610814565b610755565b9050919050565b600061084b8261081e565b9050919050565b600061085d82610840565b9050919050565b61086d81610852565b82525050565b60006020820190506108886000830184610864565b92915050565b61089781610775565b82525050565b60006020820190506108b2600083018461088e565b92915050565b6108c1816107e0565b81146108cc57600080fd5b50565b6000813590506108de816108b8565b92915050565b6000602082840312156108fa576108f9610750565b5b6000610908848285016108cf565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610958601283610911565b915061096382610922565b602082019050919050565b600060208201905081810360008301526109878161094b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c8826107e0565b91506109d3836107e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0857610a0761098e565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a4d826107e0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a8057610a7f61098e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad5600083610aba565b9150610ae082610ac5565b600082019050919050565b6000610af682610ac8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b36600b83610911565b9150610b4182610b00565b602082019050919050565b60006020820190508181036000830152610b6581610b29565b9050919050565b6000610b77826107e0565b9150610b82836107e0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bbb57610bba61098e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c00826107e0565b9150610c0b836107e0565b925082610c1b57610c1a610bc6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4581610c26565b8114610c5057600080fd5b50565b600081519050610c6281610c3c565b92915050565b6000819050919050565b610c7b81610c68565b8114610c8657600080fd5b50565b600081519050610c9881610c72565b92915050565b600081519050610cad816108b8565b92915050565b600080600080600060a08688031215610ccf57610cce610750565b5b6000610cdd88828901610c53565b9550506020610cee88828901610c89565b9450506040610cff88828901610c9e565b9350506060610d1088828901610c9e565b9250506080610d2188828901610c53565b9150509295509295909350565b6000610d3982610c68565b9150610d4483610c68565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8357610d8261098e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dc057610dbf61098e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dfd57610dfc61098e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e3a57610e3961098e565b5b82820290509291505056fea2646970667358221220c39113963bd92ba0a8d36ac61684e52784ed555c1106804b7b51ae946df01ac164736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107b3565b610521565b6040516100d891906107f9565b60405180910390f35b3480156100ed57600080fd5b506100f6610539565b60405161010391906107f9565b60405180910390f35b34801561011857600080fd5b50610121610546565b60405161012e9190610873565b60405180910390f35b34801561014357600080fd5b5061014c61056a565b604051610159919061089d565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108e4565b61058e565b6040516101a0919061089d565b60405180910390f35b6802b5e3af16b18800006101e660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cd90919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e9061096e565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d991906109bd565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610367576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104115760006001828154811061038d5761038c610a13565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508061040a90610a42565b905061036a565b50600067ffffffffffffffff81111561042d5761042c610a8b565b5b60405190808252806020026020018201604052801561045b5781602001602082028036833780820191505090505b50600190805190602001906104719291906106a9565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049890610aeb565b60006040518083038185875af1925050503d80600081146104d5576040519150601f19603f3d011682016040523d82523d6000602084013e6104da565b606091505b505090508061051e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051590610b4c565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d983610609565b90506000670de0b6b3a764000085836105f29190610b6c565b6105fc9190610bf5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065257600080fd5b505afa158015610666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068a9190610cb3565b5050509150506402540be400816106a19190610d2e565b915050919050565b828054828255906000526020600020908101928215610722579160200282015b828111156107215782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c9565b5b50905061072f9190610733565b5090565b5b8082111561074c576000816000905550600101610734565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078082610755565b9050919050565b61079081610775565b811461079b57600080fd5b50565b6000813590506107ad81610787565b92915050565b6000602082840312156107c9576107c8610750565b5b60006107d78482850161079e565b91505092915050565b6000819050919050565b6107f3816107e0565b82525050565b600060208201905061080e60008301846107ea565b92915050565b6000819050919050565b600061083961083461082f84610755565b610814565b610755565b9050919050565b600061084b8261081e565b9050919050565b600061085d82610840565b9050919050565b61086d81610852565b82525050565b60006020820190506108886000830184610864565b92915050565b61089781610775565b82525050565b60006020820190506108b2600083018461088e565b92915050565b6108c1816107e0565b81146108cc57600080fd5b50565b6000813590506108de816108b8565b92915050565b6000602082840312156108fa576108f9610750565b5b6000610908848285016108cf565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610958601283610911565b915061096382610922565b602082019050919050565b600060208201905081810360008301526109878161094b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c8826107e0565b91506109d3836107e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0857610a0761098e565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a4d826107e0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a8057610a7f61098e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad5600083610aba565b9150610ae082610ac5565b600082019050919050565b6000610af682610ac8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b36600b83610911565b9150610b4182610b00565b602082019050919050565b60006020820190508181036000830152610b6581610b29565b9050919050565b6000610b77826107e0565b9150610b82836107e0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bbb57610bba61098e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c00826107e0565b9150610c0b836107e0565b925082610c1b57610c1a610bc6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4581610c26565b8114610c5057600080fd5b50565b600081519050610c6281610c3c565b92915050565b6000819050919050565b610c7b81610c68565b8114610c8657600080fd5b50565b600081519050610c9881610c72565b92915050565b600081519050610cad816108b8565b92915050565b600080600080600060a08688031215610ccf57610cce610750565b5b6000610cdd88828901610c53565b9550506020610cee88828901610c89565b9450506040610cff88828901610c9e565b9350506060610d1088828901610c9e565b9250506080610d2188828901610c53565b9150509295509295909350565b6000610d3982610c68565b9150610d4483610c68565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8357610d8261098e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dc057610dbf61098e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dfd57610dfc61098e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e3a57610e3961098e565b5b82820290509291505056fea2646970667358221220c39113963bd92ba0a8d36ac61684e52784ed555c1106804b7b51ae946df01ac164736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}